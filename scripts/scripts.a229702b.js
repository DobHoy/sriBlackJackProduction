"use strict";angular.module("sritry1App",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ngPlayingCards","ngLodash"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl"}).when("/Game",{templateUrl:"views/game.html",controller:"GameCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("sritry1App").controller("MainCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("sritry1App").controller("AboutCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("sritry1App").factory("mvDealer",function(){return{checkGameStateBJ:function(a){var b=a.player.Score,c=a.dealer.Score;return 21===b&&21===c?0:21===b||c>21||b>c&&21>b&&21>c&&c>16?1:21===c||b>21?2:-1},alertStatus:function(a){0===a?swal({title:"Its a tie!",text:"The game is in Push",type:"warning",confirmButtonText:"Ok"}):1===a?swal({title:"Player won!",text:"Congrats!",type:"success",confirmButtonText:"Ok"}):2===a?swal("Dealer won!","Dealer won!","warning"):swal("some went wrong","oops","error")}}}),angular.module("sritry1App").factory("mvCard",["lodash",function(a){var b=["heart","diamond","spade","club"],c=["ace","two","three","four","five","six","seven","eight","nine","ten","jack","queen","king"],d=[];return angular.forEach(b,function(a){angular.forEach(c,function(b){d.push({suit:a,rank:b})})}),{giveRandomCard:function(){var d=b[a.random(b.length-1)],e=c[a.random(c.length-1)],f={suit:d,rank:e};return f},checkDeck:function(b){var c=a.remove(d,function(a){return a.suit===b.suit&&a.rank===b.rank});return c},returnRightCard:function(){var a=this.giveRandomCard(),b=this.checkDeck(a);return 0!=b.length?a:this.returnRightCard()},getScore:function(a){var b=c.indexOf(a);return 0==b||10==b||11==b||12==b?0===b?11:10:b+1}}}]),angular.module("sritry1App").factory("mvGame",["mvCard","mvDealer",function(a,b){return{DealSingleCard:function(b){var c=a.returnRightCard();b.Cards.push(c);var d=a.getScore(c.rank);b.Score+=d},Deal:function(a){this.DealSingleCard(a),this.DealSingleCard(a)},isGameOver:function(a){var c=b.checkGameStateBJ(a);return c},dealersTurn:function(a){var b=a.dealer.Score,c=a.player.Score;return 17>b?(this.DealSingleCard(a.dealer),b=a.dealer.Score,b>21?(swal("Player won!","Dealer busted!","success"),1):21===b?(swal("Dealer won!","Dealer balackjack!","success"),2):b>16&&c>b&&21>c?(swal("Player won!","You have more than dealer","success"),1):-1):void 0}}}]),angular.module("sritry1App").controller("GameCtrl",["$scope","mvGame","mvDealer",function(a,b,c){a.playerReady=!1,a.gameinProgress=!1,a.canHitOrStay=!1,a.canRestart=!1,a.player={Score:0,Cards:[]},a.dealer={Score:0,Cards:[]},a.finishGame=function(b){b>=0&&(c.alertStatus(b),a.canRestart=!0,a.canHitOrStay=!1)},a.gameStart=function(){a.playerReady=!0,a.gameinProgress=!0,a.canRestart=!1},a.reStart=function(){a.player={Score:0,Cards:[]},a.dealer={Score:0,Cards:[]},$(".playing-card").remove(),a.gameStart(),a.canHitOrStay=!1},a.deal=function(){b.Deal(a.player),b.Deal(a.dealer);var c=b.isGameOver(a);a.finishGame(c),a.canHitOrStay=!0},a.hit=function(){b.DealSingleCard(a.player);var d=b.isGameOver(a);d>=0?(a.canRestart=!0,c.alertStatus(d),a.canHitOrStay=!1):(d=b.dealersTurn(a),a.finishGame(d))},a.stay=function(){var c=b.dealersTurn(a);a.finishGame(c)}}]);